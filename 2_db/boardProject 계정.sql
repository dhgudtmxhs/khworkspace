
		SELECT LEVEL, C.* FROM
		(SELECT COMMENT_NO, COMMENT_CONTENT,
		       TO_CHAR(C_CREATE_DATE, 'YYYY"년"MM"월"DD"일"HH"시"MM"분"SS"초"') C_CREATE_DATE,
		       BOARD_NO, MEMBER_ID, MEMBER_NICKNAME, PROFILE_IMG, PARENT_NO, COMMENT_DEL_FL
		FROM "COMMENT"
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		START WITH PARENT_NO IS NULL 
		CONNECT BY PRIOR COMMENT_NO = PARENT_NO 
		ORDER SIBLINGS BY COMMENT_NO;
        
DROP TABLE "COMMENT";
CREATE TABLE "COMMENT" (
   "COMMENT_NO"   NUMBER      NOT NULL,
   "BOARD_NO"   NUMBER      NOT NULL,
   "MEMBER_ID"   VARCHAR2(20)      NOT NULL,
   "COMMENT_CONTENT"   VARCHAR2(600)      NOT NULL,
   "CREATE_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "MODIFY_DT"   DATE      NULL,
   "PARENT_NO"   NUMBER      NULL,
   "DELETED_FL"   CHAR(1)   DEFAULT 'N'   NOT NULL
);

COMMENT ON COLUMN "COMMENT"."COMMENT_NO" IS '댓글 번호';
COMMENT ON COLUMN "COMMENT"."BOARD_NO" IS '게시글 번호';
COMMENT ON COLUMN "COMMENT"."MEMBER_ID" IS '작성자 아이디';
COMMENT ON COLUMN "COMMENT"."COMMENT_CONENT" IS '댓글 내용';
COMMENT ON COLUMN "COMMENT"."CREATE_DT" IS '댓글 작성일';
COMMENT ON COLUMN "COMMENT"."MODIFY_DT" IS '댓글 수정일';
COMMENT ON COLUMN "COMMENT"."PARENT_NO" IS '부모 댓글 번호';
COMMENT ON COLUMN "COMMENT"."DELETED_FL" IS '댓글 삭제 여부';

ALTER TABLE "COMMENT" ADD CONSTRAINT "PK_COMMENT" PRIMARY KEY (
   "COMMENT_NO"
);

DROP SEQUENCE "SEQ_COMMENT_NO";
CREATE SEQUENCE SEQ_COMMENT_NO NOCACHE;


	<!-- 게시글 목록 조회(조회순) -->
			SELECT B.BOARD_NO, B.MEMBER_ID, B.BOARD_TITLE, B.BOARD_CONTENT, B.CREATE_DT, B.MODIFY_DT, B.DELETED_FL, B.READ_COUNT, BG.BOARD_CODE
			FROM BOARD B
			JOIN BOARD_GENERAL BG ON (B.BOARD_NO = BG.BOARD_NO)
			WHERE BG.BOARD_CODE = 1
			ORDER BY READ_COUNT DESC;
            
            
            
            SELECT B.BOARD_NO, B.MEMBER_ID, B.BOARD_TITLE, B.BOARD_CONTENT, B.CREATE_DT, B.MODIFY_DT, B.DELETED_FL, B.READ_COUNT, BG.BOARD_CODE,
  (SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
  (SELECT LISTAGG(T.TAG_NM, ', ') WITHIN GROUP (ORDER BY T.TAG_NM)
   FROM TAG_RELATION TR
   JOIN TAG T ON TR.TAG_NO = T.TAG_NO
   WHERE TR.ITEM_NO = B.BOARD_NO) TAGS
FROM (
  SELECT A.*, ROWNUM AS rnum FROM (
    SELECT B.BOARD_NO, B.MEMBER_ID, B.BOARD_TITLE, B.BOARD_CONTENT, B.CREATE_DT, B.MODIFY_DT, B.DELETED_FL, B.READ_COUNT, M.MEMBER_NICK, BG.BOARD_CODE 
    FROM BOARD B
    JOIN MEMBER M ON B.MEMBER_ID = M.MEMBER_ID
    JOIN BOARD_GENERAL BG ON B.BOARD_NO = BG.BOARD_NO
    WHERE BG.BOARD_CODE = 1
    ORDER BY B.BOARD_NO DESC
  ) A
)
WHERE rnum BETWEEN 11 AND 20;


SELECT R.*, COUNT(*) AS "MATCHING_COUNT"
FROM BOARD_RECRUIT R
JOIN BOARD B ON R.BOARD_NO = B.BOARD_NO
JOIN MEMBER M ON M.MEMBER_ID = B.MEMBER_ID 
JOIN RESUME RS ON M.MEMBER_ID = RS.MEMBER_ID
JOIN COMPANY C ON C.CPMN_NO = R.CPMN_NO
WHERE
    RS."POSITION" = R."POSITION"
    AND RS.EXPR_PERIOD = R.EXPR_PERIOD
    AND RS.EMPL_TYPE = R.EMPL_TYPE
    AND RS.EMPL_LOCATION = R.EMPL_LOCATION
    AND RS.SALARY_EXPECT = R.SALARY_EXPECT
GROUP BY R.MEMBER_ID, R.BOARD_TITLE, R.BOARD_CONTENT, R.EMPL_CNDT, R.ENTR_EXAM, R.BENEFIT, R."POSITION", R.JOB_TYPE, R.CMPN_ADDR, R.CMPN_NO, R.CMPN_INTRO, R.CMPN_NM, C.CMPN_LOGO
HAVING "MATCHING_COUNT" >= 1;
	
    
SELECT RS.MEMBER_ID, BR.POSITION, BR.EXPR_PERIOD, BR.EMPL_TYPE, BR.EMPL_CNDT, BR.ENTR_EXAM, BR.JOB_TYPE, BR.BENEFIT, COUNT(*) AS "MATCHING_COUNT"
FROM RESUME RS
JOIN BOARD_RECRUIT BR ON RS."POSITION" = BR."POSITION" 
WHERE
    RS."POSITION" = BR."POSITION"
    AND RS.EXPR_PERIOD = BR.EXPR_PERIOD
    AND RS.EMPL_TYPE = BR.EMPL_TYPE
GROUP BY RS.MEMBER_ID, BR.POSITION, BR.EXPR_PERIOD, BR.EMPL_TYPE, BR.EMPL_CNDT, BR.ENTR_EXAM, BR.JOB_TYPE, BR.BENEFIT
HAVING "MATCHING_COUNT" >= 1;

SELECT RS.MEMBER_ID, BR.POSITION, BR.EXPR_PERIOD, BR.EMPL_TYPE, BR.EMPL_CNDT, BR.ENTR_EXAM, BR.JOB_TYPE, BR.BENEFIT, COUNT(*) AS "MATCHING_COUNT"
FROM RESUME RS
JOIN BOARD_RECRUIT BR ON RS."POSITION" = BR."POSITION" 
WHERE
    RS."POSITION" = BR."POSITION"
    AND RS.EXPR_PERIOD = BR.EXPR_PERIOD
    AND RS.EMPL_TYPE = BR.EMPL_TYPE
GROUP BY RS.MEMBER_ID, BR.POSITION, BR.EXPR_PERIOD, BR.EMPL_TYPE, BR.EMPL_CNDT, BR.ENTR_EXAM, BR.JOB_TYPE, BR.BENEFIT
HAVING COUNT(*) >= 1;

SELECT RS.MEMBER_ID, BR.POSITION, BR.EXPR_PERIOD, BR.EMPL_TYPE, BR.EMPL_CNDT, BR.ENTR_EXAM, BR.JOB_TYPE, BR.BENEFIT, COUNT(*) AS "MATCHING_COUNT"
FROM RESUME RS
JOIN BOARD_RECRUIT BR ON RS."POSITION" = BR."POSITION" 
WHERE
    RS."POSITION" = BR."POSITION"
    AND RS.EXPR_PERIOD = BR.EXPR_PERIOD
    AND RS.EMPL_TYPE = BR.EMPL_TYPE
GROUP BY RS.MEMBER_ID, BR.POSITION, BR.EXPR_PERIOD, BR.EMPL_TYPE, BR.EMPL_CNDT, BR.ENTR_EXAM, BR.JOB_TYPE, BR.BENEFIT
HAVING COUNT(*) >= 1 AND COUNT(*) <= 2; 
