package edu.kh.jsp.controller;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;

// Tomcat(WAS == Servlet Container) 에서 제공

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

// Servlet : 웹 서비스(요청,응답)을 위한 자바 클래스

// @WebServlet("요청 주소") Servlet 클래스 등록 + 요청 주소 매핑

@WebServlet ("/signUp")
public class SignUpServlet extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

		String memberId = req.getParameter("inputId");
		
		String message = memberId + "님의 가입을 환영합니다!";
		
		// 클라이언트와 연결된 출력 스트림을 이용해서 응답 화면을 출력
		/*
		 * PrintWriter out = resp.getWriter(); out.println("<!DOCTYPE html>");
		 * out.println("<html>"); // ... out.println("</html>");
		 */
		
		// Servlet으로 응답 화면 만들기 너무 어렵다.
		// -> 응답 화면 만드는 부분의 표기법만 HTML로 변경하자!
		// --> 이것이 JSP!!
		//	   (눈에 보이는 코드는 HTML, 해석은 Java)
		
		// Servlet -> RequestDispatcher -> forward(req,resp) -> JSP
		//				 (요청 발송자)
		
		RequestDispatcher dispatcher = req.getRequestDispatcher("WEB-INF/views/signupResult.jsp");
									                       // JSP 경로 작성 시 webapp 폴더를 기준으로 작성
		dispatcher.forward(req, resp);
		
		// HttpServletRequest 객체에 message 변수 값 추가
		req.setAttribute("message", message);
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
}
