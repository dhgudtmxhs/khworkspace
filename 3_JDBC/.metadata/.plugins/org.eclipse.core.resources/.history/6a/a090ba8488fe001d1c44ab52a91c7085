package edu.kh.jdbc.member.model.service;

// import static 구문 : static 메소드를 import 해서 
// 클래스명.static메소드() 형태에서 클래스명을 생략할 수 있게 하는 구문
// Connection conn = JDBCTemplate.getConnection(); 에서 JDBCTemplate 을 없애기

import java.sql.Connection;

import edu.kh.jdbc.common.JDBCTemplate;
import edu.kh.jdbc.member.model.dao.MemberDAO;

// Service : 데이터 가공(요청에 맞는 데이터를 만드는 것)
//			+ 트랙잭션 제어 처리
//			-> 하나의 Service 메소드에서 n개의 DAO 메소드를 호출할 수 있다.
//			-> n개의 DAO에서 수행된 SQL을 한번에 commit/rollback 처리한다. 
// 			3개 dao 호출, 2개 성공 1개 실패 (하나라도 실패하면) rollback하고 다성공해야 commit

// *** Service에서 트랜잭션을 처리하기 위해서는 Connection 객체가 필요하다. ***
//	== Service에서 Connection 객체를 생성하고 반환 해야한다.

public class MemberService {

	// 회원 관련 SQL 수행 및 결과를 반환할 DAO 객체 생성 및 참조
	private MemberDAO dao = new MemberDAO();
	
	
	/**
	 * 아이디 중복 검사 Service
	 * @param memberId
	 * @return
	 */
	public int duplicateCheck(String memberId) {
	
		// 1. Connection 객체 생성
		Connection conn = JDBCTemplate.getConnection();
		
		// 2. DAO 메소드(SELECT) 호출 후 결과 반환 받음
		
		// (SELECT는 별도의 트랜잭션 제어 필요 없음)
		// 3. 사용한 Connection 객체 반환
		JDBCTemplate.close(conn);
		
		// 4. 중복 검사 결과 View로 반환
		
		return 0;
	}

	
	
	
	
	
}
