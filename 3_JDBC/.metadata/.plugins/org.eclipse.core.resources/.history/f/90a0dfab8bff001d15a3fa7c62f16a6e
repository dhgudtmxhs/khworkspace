package edu.kh.jdbc.board.model.service;

import java.sql.Connection;
import java.util.List;

import edu.kh.jdbc.board.model.dao.BoardDAO;
import edu.kh.jdbc.board.model.vo.Board;
import edu.kh.jdbc.board.model.vo.Reply;
import edu.kh.jdbc.common.JDBCTemplate;

import static edu.kh.jdbc.common.JDBCTemplate.*;



public class BoardService {

	private BoardDAO dao = new BoardDAO();
	
	/** 게시글 목록 조회 Service
	 * @return boardList
	 * @throws Exception
	 */
	public List<Board> selectAll() throws Exception{

		//1) Connection 생성
		Connection conn = getConnection();
		
		// 2) DAO 메소드(SELECT) 호출 후 결과 반환 받기
		List<Board> boardList = dao.selectAll(conn);
		
		// 3) select 트랜잭션제어 처리 안함
		
		// 4)  커넥션 반환
		close(conn);
		
		// 5) DAO 수행 결과 View에 반환
		return boardList;
		
	}

	/**
	 * 게시글 상세 조회
	 * @param boardNo
	 * @return board
	 * @throws Exception
	 */
	public Board selectOne(int boardNo) throws Exception {
		
		// 1) Connection 생성 필드에 쓰면서 하면 안됨 메서드에서 쓸때마다 닫아줘야함
		Connection conn = getConnection();
		
		// 2) 특정 게시글 상세 조회 DAO 메소드 호출 후 결과 반환 받기
		Board board = dao.selectOne(conn, boardNo);
		
		
		if(board != null) { // 2번 게시글 상세 조회 내용이 있을 경우에만
			
			// 3-1) 특정 게시글의 댓글 목록 조회 DAO 메소드 호출 후 결과 반환 받기
			List<Reply> replyList = dao.selectReplyList(conn, boardNo);
				
			// Board 필드에 replyList 있음
			// Board 객체의 replyList 필드에 조회한 댓글 목록을 대입(세팅)
			board.setReplyList(replyList);
			
			// 3-2) 게시글 조회수 증가 DAO 메소드(UPDATE) 호출 후 결과(성공한 행의 개수) 반환 받기
			int result = dao.increaseReadCount(conn, boardNo);
			
		}
		// 4) Connection 반환
		close(conn);
		
		// 5) DAO 수행 결과 View로 반환
		
		return board; // 게시글 상세 조회 + 댓글 목록까지 가져간다. return은 1개밖에 반환 못함
	
	}

}
